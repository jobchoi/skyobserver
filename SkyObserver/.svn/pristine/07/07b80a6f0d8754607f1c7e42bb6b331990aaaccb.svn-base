package com.example.skyobserver;

import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;


public class Main_Fragment extends Fragment {


    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.main_fragment, container, false);


        try {
            new MainFragment().execute();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return view;
    }

    @Override
    public void onStart() {



        super.onStart();
    }

    public class MainFragment extends AsyncTask<String, Void, ArrayList<mainfragementDTO>> {

        ArrayList<mainfragementDTO> data = new ArrayList<>();

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
        }

        @Override
        protected ArrayList<mainfragementDTO> doInBackground(String... strings) {

            String url = "http://openapi.airkorea.or.kr/openapi/services/rest/ArpltnInforInqireSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&searchCondition=WEEK&pageNo=1&numOfRows=10&ServiceKey=YDX9bhqzzi6UFHEraxXWeH%2FubajSBOmM4674vxXkNJLOrRm4IBlLSy8nJOgN%2Bmv%2Bq1MebN7zvZ7AmwsXzIRSVQ%3D%3D&_returnType=json";
            StringBuffer sb = new StringBuffer();
            try {

                String jsonPage = getStringFromUrl(url);

                JSONObject json = new JSONObject(jsonPage);
                JSONArray jArr = json.getJSONArray("list");

                for (int i = 0; i < jArr.length(); i++) {

                    json = jArr.getJSONObject(i);

                    String seoul = json.getString("seoul");
                    String busan = json.getString("busan");
                    String daegu = json.getString("daegu");
                    String incheon = json.getString("incheon");
                    String gwangju = json.getString("gwangju");
                    String daejeon = json.getString("daejeon");
                    String ulsan = json.getString("ulsan");
                    String gyeonggi = json.getString("gyeonggi");
                    String gangwon = json.getString("gangwon");
                    String chungbuk = json.getString("chungbuk");
                    String chungnam = json.getString("chungnam");
                    String jeonbuk = json.getString("jeonbuk");
                    String jeonnam = json.getString("jeonnam");
                    String gyeongbuk = json.getString("gyeongbuk");
                    String gyeongnam = json.getString("gyeongnam");
                    String jeju = json.getString("jeju");
                    String sejong = json.getString("sejong");


                    mainfragementDTO nStation = new mainfragementDTO(seoul, busan, daegu, incheon, gwangju, daejeon, ulsan, gyeonggi, gangwon, chungbuk, chungnam, jeonbuk, jeonnam, gyeongbuk, gyeongnam, jeju, sejong);

                    this.data.add(nStation);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }




            return data;
        }

        public String getStringFromUrl(String pUrl) {
            BufferedReader bufreader = null;
            HttpURLConnection urlConnection = null;

            StringBuffer page = new StringBuffer();

            try {
                URL url = new URL(pUrl);
                urlConnection = (HttpURLConnection) url.openConnection();
                urlConnection.setRequestMethod("GET");
                urlConnection.setDoOutput(true);
                urlConnection.setDoInput(true);
                urlConnection.setUseCaches(false);
                urlConnection.setDefaultUseCaches(false);

                InputStream contentStream = urlConnection.getInputStream();

                bufreader = new BufferedReader(new InputStreamReader(contentStream, "UTF-8"));
                String line = null;

                while ((line = bufreader.readLine()) != null) {
                    Log.d("line:", line);
                    page.append(line);
                }

            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    bufreader.close();
                    urlConnection.disconnect();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return page.toString();
        }

        @Override
        protected void onPostExecute(ArrayList<mainfragementDTO> data) {



    }

    }
}

